#pragma once
#include <map>
#include <vector>
#include <iostream>
typedef struct BasicConfig {
public:
    //std::string ccm_result_directory = "C:/Users/30880/Desktop/calibration_data.bin";
    std::string ccm_result_directory = "C:/Users/30880/Desktop/calibration_ccm_3x3.bin";;
    int input_image_format = 0;      // 0:linear rgb   1:srgb    2.linear rgb with wb     3.linear rgb with wb and Y gain
    int output_image_format = 0;     // 0:linear rgb   1:srgb    2.linear rgb with wb     3.linear rgb with wb and Y gain
    int ccm_position = 0;            // 0:linear rgb   1::srgb
    int ccm_format = 0;              // 0:3x3   1:3x4
    int wb_format = 0;               // 0:colorchecker  1:white paper  2-10:prediction(no support yet)
    int color_checker_type = 3;      // 0:xrite  1:imagetest  2.3nh   3.ColorChecker2005_LAB_D50_2
    int ae_time = 40;
    float color_checker_resize_ratio = 1;
    int calib_image_num = 10;
    int com_num = 3;
    std::string result_directory = "C:/Users/30880/Desktop/result/";
    int blc = 0;
    bool _debug = TRUE;


    double ColorChecker2005_LAB_D50_2[24][3] = {
    { 37.986, 13.555, 14.059 },
    { 65.711, 18.13, 17.81 },
    { 49.927, -4.88, -21.925 },
    { 43.139, -13.095, 21.905 },
    { 55.112, 8.844, -25.399 },
    { 70.719, -33.397, -0.199 },
    { 62.661, 36.067, 57.096 },
    { 40.02, 10.41, -45.964 },
    { 51.124, 48.239, 16.248 },
    { 30.325, 22.976, -21.587 },
    { 72.532, -23.709, 57.255 },
    { 71.941, 19.363, 67.857 },
    { 28.778, 14.179, -50.297 },
    { 55.261, -38.342, 31.37 },
    { 42.101, 53.378, 28.19 },
    { 81.733, 4.039, 79.819 },
    { 51.935, 49.986, -14.574 },
    { 51.038, -28.631, -28.638 },
    { 96.539, -0.425, 1.186 },
    { 81.257, -0.638, -0.335 },
    { 66.766, -0.734, -0.504 },
    { 50.867, -0.153, -0.27 },
    { 35.656, -0.421, -1.231 },
    { 20.461, -0.079, -0.973 }};

    double ColorChecker2005_Xrite[24][3] = {
    { 37.986, 13.555, 14.059 },
    { 65.711, 18.13, 17.81 },
    { 49.927, -4.88, -21.925 },
    { 43.139, -13.095, 21.905 },
    { 55.112, 8.844, -25.399 },
    { 70.719, -33.397, -0.199 },
    { 62.661, 36.067, 57.096 },
    { 40.02, 10.41, -45.964 },
    { 51.124, 48.239, 16.248 },
    { 30.325, 22.976, -21.587 },
    { 72.532, -23.709, 57.255 },
    { 71.941, 19.363, 67.857 },
    { 28.778, 14.179, -50.297 },
    { 55.261, -38.342, 31.37 },
    { 42.101, 53.378, 28.19 },
    { 81.733, 4.039, 79.819 },
    { 51.935, 49.986, -14.574 },
    { 51.038, -28.631, -28.638 },
    { 96.539, -0.425, 1.186 },
    { 81.257, -0.638, -0.335 },
    { 66.766, -0.734, -0.504 },
    { 50.867, -0.153, -0.27 },
    { 35.656, -0.421, -1.231 },
    { 20.461, -0.079, -0.973 } };

    double ColorChecker2005_imatest[24][3] = {
        {37.54,12.02,13.33},
        {65.2,14.82,17.55},
        {50.37,-1.57,-21.43},
        {43.12,-14.63,22.12},
        {55.34,11.45,-25.29},
        {71.36,-32.72,1.64},
        {61.37,32.88,55.16},
        {40.71,16.91,-45.09},
        {49.86,45.93,13.88},
        {30.15,24.91,-22.61},
        {72.44,-27.46,58.47},
        {70.92,15.58,66.54},
        {29.62,21.43,-49.03},
        {55.64,-40.76,33.27},
        {40.55,49.97,25.46},
        {80.98,-1.04,80.03},
        {51.01,49.88,-16.93},
        {52.12,-24.61,-26.18},
        {96.54,-0.69,1.35},
        {81.27,-0.61,-0.24},
        {66.79,-0.65,-0.43},
        {50.87,-0.06,-0.25},
        {35.68,-0.22,-1.21},
        {20.48,0.05,-0.97}};

    //double ColorCheckerData[3][24][3];
    double ColorChecker2005_3nh[24][3] = {
    {36.38,11.99,13.76},
    {64.68,15.88,17.79},
    {49,-2.06,-21.12},
    {42.22,-14.79,22.29},
    {54.27,11.91,-25.66},
    {70.66,-32.52,2},
    {61.2,32.23,55.33},
    {40.01,17.42,-45.62},
    {49.42,46.49,15.06},
    {29.26,25.67,-23.12},
    {72.7,-27.19,58.51},
    {70.67,15.17,67.2},
    {28.77,22.67,-49.29},
    {53.68,-41.21,33.05},
    {39.96,49.04,23.62},
    {80.65,-1.14,80.45},
    {50.79,51.88,-16.79},
    {51.99,-24.22,-26.5},
    {96.23,-0.15,1.56},
    {80.97,-0.46,-0.57},
    {66.41,-0.23,-0.39},
    {49.88,-0.32,-0.01},
    {34.88,-0.31,-1.17},
    {18.7,0.22,-1.71,}};
    //std::map<int, double[24][3]> color_checker_data = {
    //    {0,ColorChecker2005_LAB_D50_2},
    //    {1,ColorChecker2005_Xrite},
    //    {2,ColorChecker2005_imatest},
    //    {3,ColorChecker2005_3nh}
    //};
} Config;






